<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murongyehua.rotten.dao.mapper.RottenDbCheckDao">
  <resultMap id="BaseResultMap" type="com.murongyehua.rotten.dao.po.DbCheckPO">
    <id column="urid" jdbcType="VARCHAR" property="urid" />
    <result column="case_id" jdbcType="VARCHAR" property="caseId" />
    <result column="datasource_id" jdbcType="VARCHAR" property="datasourceId" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="filed_check" jdbcType="VARCHAR" property="filedCheck" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    urid, case_id, datasource_id, `table_name`, filed_check, create_time, update_time, 
    create_user, update_user, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rotten_db_check
    where urid = #{urid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rotten_db_check
    where urid = #{urid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="urid" keyProperty="urid" parameterType="com.murongyehua.rotten.dao.po.DbCheckPO" useGeneratedKeys="true">
    insert into rotten_db_check (case_id, datasource_id, `table_name`, 
      filed_check, create_time, update_time, 
      create_user, update_user, version
      )
    values (#{caseId,jdbcType=VARCHAR}, #{datasourceId,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, 
      #{filedCheck,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="urid" keyProperty="urid" parameterType="com.murongyehua.rotten.dao.po.DbCheckPO" useGeneratedKeys="true">
    insert into rotten_db_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="caseId != null">
        case_id,
      </if>
      <if test="datasourceId != null">
        datasource_id,
      </if>
      <if test="tableName != null">
        `table_name`,
      </if>
      <if test="filedCheck != null">
        filed_check,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="datasourceId != null">
        #{datasourceId,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="filedCheck != null">
        #{filedCheck,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.murongyehua.rotten.dao.po.DbCheckPO">
    update rotten_db_check
    <set>
      <if test="caseId != null">
        case_id = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="datasourceId != null">
        datasource_id = #{datasourceId,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        `table_name` = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="filedCheck != null">
        filed_check = #{filedCheck,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where urid = #{urid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.murongyehua.rotten.dao.po.DbCheckPO">
    update rotten_db_check
    set case_id = #{caseId,jdbcType=VARCHAR},
      datasource_id = #{datasourceId,jdbcType=VARCHAR},
      `table_name` = #{tableName,jdbcType=VARCHAR},
      filed_check = #{filedCheck,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where urid = #{urid,jdbcType=VARCHAR}
  </update>
</mapper>